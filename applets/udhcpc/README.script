default.script
==============

This script is an example for the script the udhcpc applet may use as a callback script.

Currently it supports only IPv4 and handles DNS in the following way:

* It assumes there exists a directory /var/run/resolv.conf (typically located inside a RAM disk) where it shall manage symlinks. This directory shall be managed by this script (except for initial setup). Let this directory be $RESOLVE in the remaining description.

* It further assumes there exists a directory /var/run/udhcpc (typically located inside a RAM disk) where it shall store per-interface runtime configuration. This directory shall be managed by both this script and by the user invoking udhcpc. Let this directory be $RUNTIME in the remaining description.

* The script supports some options to be selected by the user who brings up or tears down a network interface. Those options are defined in an interface options file $RUNTIME/options-$IFC where $IFC is the name of the network interface for which the script has been invoked. This file must exist, but it may be empty if no options are required for the interface.

* The interface options file must be created by the user who invokes udhcpc; the callback script will read it and delete it when the connection is brought down. Therefore, the user needs to re-create the file every time before udhcpc is started.

* The interface options file is a Bourne shell script snippet and will be used as follows: First, the udhcpc callback script sets up default values for certain shell variables which represent the option values. Then the interface options file is "sourced" as a script, which may change the defaults by assigning new values. The resulting values are then used by the callback script.

* The following symlinks need to be set up initially: $RESOLVE/default contains a static fallback version of /etc/resolv.conf to be used when no DNS information is provided by DHCP. Normally, this static fallback configuration is actually a symlink itself to some file in /etc, such as /etc/resolv.conf.fallback or similar. But such detail is beyond the scope of this script.

* $RESOLVE/active is a symlink to the actual DNS configuration which shall be used. Typically, /etc/resolv.conf is also a symlink which points to $RESOLVE/active, but this is outside the scope of this script.

* Whenever udhcpc receives DNS information for interface $IFC, it creates a file $RESOLVE/dns-$IFC containing a file in /etc/resolv.conf syntax containing this information. Then it changes the symlink $RESOLVE/active to point to this new file, thus making the new DNS configuration the current one.

* When the DHCP lease is returned/released, the script re-targets the $RESOLVE/active symlink to point to $RESOLVE/default and the $RESOLVE/dns-$IFC file will be deleted.

* The callback script will also create a file $RUNTIME/gateway-$interface, which contains any default route reported by the DHCP server. This file will always be created, but may be empty. This file is handy to restore the default gateway after the user has temporarily set a different default gateway.

* Optionally include a line "use_dns=false" in the interface options file. This modifies the behaviour stated above such that the $RESOLVE/active will never be touched but rather left as-is. The $RESOLVE/dns-$IFC will still be created if the DHCP server provides DNS information, but the $RESOLVE/active symlink will not be re-targeted to it. Neither will the symlink be re-targeted to $RESOLVE/default when the interface is torn down.

* Optionally include a line "use_gateway=false" in the interface options file. This modifies the behaviour stated above such that any default gateway provided by the DHCP server will be ignored, and the current default gateway will be left as-is. Neither will the current default route be retracted when the interface is torn down.
